{"version":3,"file":"myLib.js","sources":["../src/heightmap.ts","../src/util.ts","../src/mouseinput.ts","../src/keyboardinput.ts","../src/editor.ts","../src/gameloop.ts","../src/defs.ts","../src/viewport.ts","../src/editor-graphics.ts","../src/physics.ts","../src/partitioning.ts","../src/test.ts","../src/view.ts","../src/welcome.ts","../src/main.ts"],"sourcesContent":["import { HeightMap } from \"./defs\";\r\n\r\nexport const createHeightMap = (size:number) : HeightMap => {\r\n    \r\n    let maxValue:number = 0;\r\n    let minValue:number = 0;\r\n    let heightMap = new Array(size);\r\n    let smooth:any;\r\n    let smoothEnabled_ = false;\r\n    \r\n    for (let i = 0; i < size; i++) {\r\n        heightMap[i] = 0;\r\n    }\r\n\r\n    const get = (x:number) => {\r\n        x = Math.max(0, Math.min(heightMap.length-1, x));\r\n        if (smoothEnabled_) {\r\n            return getSmoothValue(x);\r\n        }\r\n        else {\r\n            let floor = Math.floor(x);\r\n            if (floor === x) {\r\n                return heightMap[x];\r\n            }\r\n            \r\n            let fraq = x - floor;\r\n            return (1-fraq)*heightMap[floor] + (fraq)*heightMap[floor+1];\r\n        }\r\n        return smoothEnabled_ ? getSmoothValue(x) : heightMap[Math.round(x)];\r\n    };\r\n\r\n    const getSmoothValue = (x:number) => smooth(x);\r\n\r\n    const setAll = (valueFromIndex:(index:number) => number) => {\r\n        minValue = 10e9;\r\n        maxValue = -10e9;\r\n        for (let i = 0; i < size; i++) {\r\n            let val = valueFromIndex(i);\r\n            minValue = Math.min(minValue, val);\r\n            maxValue = Math.max(maxValue, val);\r\n            heightMap[i] = val;\r\n        }\r\n        // @ts-ignore\r\n        smooth = window.Smooth(heightMap);\r\n    };\r\n\r\n    const length = () => heightMap.length;\r\n\r\n    const clone = () => {\r\n        let copy = createHeightMap(size);\r\n        copy.setAll((i:number) => get(i));\r\n        copy.smoothEnabled(smoothEnabled_);\r\n        return copy;\r\n    };\r\n\r\n    const bounds = () => {\r\n        return {\r\n            x:0,\r\n            y:minValue,\r\n            width: heightMap.length,\r\n            height:maxValue - minValue \r\n        };\r\n    };\r\n\r\n    const smoothEnabled = (enable?:boolean) => {\r\n        if (enable === undefined) {\r\n            return smoothEnabled_;\r\n        }\r\n        smoothEnabled_ = enable;\r\n    };\r\n\r\n    const serialize = () => {\r\n        return JSON.stringify(heightMap);\r\n    };\r\n\r\n    return {\r\n        setAll,\r\n        get,\r\n        count: length,\r\n        clone,\r\n        bounds,\r\n        smoothEnabled: smoothEnabled,\r\n        serialize\r\n    };\r\n};\r\n","import { Point, HeightMap } from \"./defs\";\r\nimport { createHeightMap } from \"./heightmap\";\r\n\r\nexport const isCloseToPath = (p:Point, heights:HeightMap, tolerance:number) => {\r\n    let ix = Math.round(p.x);\r\n    if (ix < -tolerance || ix > heights.count() + tolerance) {\r\n        return false;\r\n    }\r\n    return Math.abs(heights.get(p.x) - p.y) < tolerance;\r\n};\r\n\r\nexport const loadLevelJson = async (levelName:string) => {\r\n    let response = await fetch(levelName);\r\n    let json = await response.json();\r\n    let heightMap = createHeightMap(json.length);\r\n    heightMap.setAll((i:number) => json[i]);\r\n    return heightMap;\r\n};\r\n\r\nexport const loadSvg = async function(svgUrl:string) {\r\n    let response = await fetch(svgUrl);\r\n    let text = await response.text();\r\n    \r\n    return {\r\n        asElement\r\n    };\r\n\r\n    function asElement() {\r\n\t    const parser = new DOMParser();\r\n        const parsed = parser.parseFromString(text, 'image/svg+xml');\r\n        return parsed.getElementsByTagName(\"svg\")[0];\r\n    };\r\n};","import { Point, PointCallback} from \"./defs\";\r\nimport SVG from \"svgjs\";\r\n\r\ninterface DragOperationSettings {\r\n    onMouseMove: PointCallback,\r\n    onMouseUp: () => void\r\n};\r\n\r\nexport function MouseInput(mainSvg:any) {\r\n    const helperPoint = mainSvg.createSVGPoint();\r\n    const s = SVG(mainSvg);\r\n    let internalMouseDownCallback:any;\r\n\r\n    const event2domPoint = (e:MouseEvent) : Point => ({x:e.pageX, y:e.pageY});\r\n\r\n    const createDeviceMapper = () => {\r\n        let Q = 100;\r\n        let anyPoint = {x:0, y:0};\r\n        let startPoint = domPoint2svgPoint(anyPoint);\r\n        let startPointQ = domPoint2svgPoint({x:anyPoint.x + Q, y:anyPoint.y + Q});\r\n\r\n        return (domPoint:Point) => {\r\n            return {\r\n                x: startPoint.x + (startPointQ.x - startPoint.x)*(domPoint.x - anyPoint.x)/Q,\r\n                y: startPoint.y + (startPointQ.y - startPoint.y)*(domPoint.y - anyPoint.y)/Q\r\n            };\r\n        };\r\n    };\r\n\r\n    const domPoint2svgPoint = (domPoint:Point) : Point => {\r\n        helperPoint.x = domPoint.x;\r\n        helperPoint.y = domPoint.y;\r\n        return helperPoint.matrixTransform(mainSvg.getScreenCTM().inverse());\r\n    };\r\n\r\n    const onMouseDown = (callback:PointCallback) => {\r\n        if (!!internalMouseDownCallback) {\r\n            throw \"double trouble callback. (Registered twice)\";\r\n        }\r\n\r\n        internalMouseDownCallback = (e:MouseEvent) => {\r\n            let svgPoint = domPoint2svgPoint(event2domPoint(e));\r\n            callback(svgPoint);\r\n        };\r\n        s.on(\"mousedown\", internalMouseDownCallback);\r\n    };\r\n\r\n    const startDragOperation = (settings:DragOperationSettings) => {\r\n        let deviceMapper = createDeviceMapper();\r\n\r\n        const mouseMove = (e:MouseEvent) => {\r\n            settings.onMouseMove(deviceMapper(event2domPoint(e)));\r\n        };\r\n\r\n        const mouseUp = () => {\r\n            window.removeEventListener(\"mousemove\", mouseMove, true);\r\n            window.removeEventListener(\"mouseup\", mouseUp, true);\r\n            settings.onMouseUp();\r\n        };\r\n\r\n        window.addEventListener(\"mousemove\", mouseMove, true);\r\n        window.addEventListener(\"mouseup\", mouseUp, true);    \r\n    };\r\n\r\n    const off = () => {\r\n        s.off(\"mousedown\", internalMouseDownCallback);\r\n        internalMouseDownCallback = null;\r\n    };\r\n\r\n    return {\r\n        onMouseDown,\r\n        startDragOperation,\r\n        off\r\n    };\r\n};","import { Player, KeyboardMap } from \"./defs\";\r\n\r\ntype KeyboardInput = ReturnType<typeof createKeyboardInput>;\r\n\r\nexport const bindPlayerKeyboardInput = (player:Player, keyMap:KeyboardMap, keyboardInput:KeyboardInput) => {\r\n    keyboardInput.onKeyDown(keyMap.right, () => { player.input.rotateRight = true; });\r\n    keyboardInput.onKeyUp(keyMap.right, () => { player.input.rotateRight = false; });\r\n    keyboardInput.onKeyDown(keyMap.left, () => { player.input.rotateLeft = true; });\r\n    keyboardInput.onKeyUp(keyMap.left, () => { player.input.rotateLeft = false; });\r\n    keyboardInput.onKeyDown(keyMap.up, () => { player.input.jump = true; });\r\n    keyboardInput.onKeyUp(keyMap.up, () => { player.input.jump = false; });\r\n};\r\n\r\nexport function createKeyboardInput() {\r\n    \r\n    let addedHandlers = Array<any>();\r\n\r\n    const onKeyDown = (keyCode:number, callback:()=>void) => {\r\n\r\n        let handler = (e:KeyboardEvent) => {\r\n            if (e.keyCode === keyCode) {\r\n                callback();\r\n            }\r\n        };\r\n\r\n        add(\"keydown\", handler);\r\n    };\r\n\r\n    const onKeyUp = (keyCode:number, callback:()=>void) => {\r\n\r\n        let handler = (e:KeyboardEvent) => {\r\n            if (e.keyCode === keyCode) {\r\n                callback();\r\n            }\r\n        };\r\n\r\n        add(\"keyup\", handler);\r\n    };\r\n\r\n    const add = (eventName:string, handler:any) => {\r\n        addedHandlers.push([eventName, handler]);\r\n        window.addEventListener(eventName, handler);\r\n    };\r\n\r\n    const off = () => {\r\n        let kvp = addedHandlers.pop();\r\n        while (!!kvp) {\r\n            window.removeEventListener(kvp[0], kvp[1]);\r\n            kvp = addedHandlers.pop();\r\n        }\r\n    };\r\n\r\n    return {\r\n        onKeyDown,\r\n        onKeyUp,\r\n        off\r\n    };\r\n};","import SVG from \"svgjs\";\r\nimport { PathDrawer } from \"./editor-graphics\";\r\nimport { isCloseToPath } from \"./util\";\r\nimport { Point, GameData } from \"./defs\";\r\nimport { ViewPort } from \"./viewport\";\r\nimport { MouseInput } from \"./mouseinput\";\r\nimport { createKeyboardInput } from \"./keyboardinput\";\r\n\r\nconst decayedWeight = (zoomLevel:number) => (distFromFocus:number) => {\r\n    let adjustedDist = distFromFocus / zoomLevel;\r\n    return Math.pow(1.05, -adjustedDist*adjustedDist);\r\n};\r\n\r\n\r\nconst download = (filename:string, dataType:string, contents:string) => {\r\n    dataType = dataType || \"text/plain;charset=utf-8\";\r\n    var pom = document.createElement('a');\r\n    pom.setAttribute('href', 'data:' + dataType + ',' + encodeURIComponent(contents));\r\n    pom.setAttribute('download', filename);\r\n\r\n    if (document.createEvent) {\r\n        var event = document.createEvent('MouseEvents');\r\n        event.initEvent('click', true, true);\r\n        pom.dispatchEvent(event);\r\n    }\r\n    else {\r\n        pom.click();\r\n    }\r\n}\r\n\r\nexport const Editor = (gamedata:GameData, viewPort:ViewPort, pathDrawer:PathDrawer) => {\r\n\r\n    let editorVisible = true;\r\n    let heightMap = gamedata.heightMap;\r\n    let mainSvg:HTMLElement = document.getElementById(\"mainsvg\");\r\n    let s = SVG(mainSvg);\r\n\r\n    let mouseInput = MouseInput(mainSvg);\r\n    let keyboardInput = createKeyboardInput();\r\n\r\n    const startChangeHeights = (pDown:Point) => {\r\n        heightMap.smoothEnabled(false);\r\n\r\n        let heightMapCopy = heightMap.clone();\r\n        let calcWeight = decayedWeight(viewPort.zoomLevel());\r\n        \r\n        mouseInput.startDragOperation({\r\n            onMouseMove: (pMove:Point) => {\r\n                let yDiff = pMove.y - pDown.y;\r\n                heightMap.setAll((ix:number) => heightMapCopy.get(ix) + yDiff * calcWeight(ix - pDown.x));\r\n                pathDrawer.drawAllLayers();\r\n                viewPort.adjustLayerPerspectives(viewPort.location());\r\n                //updateHeightDots(editGroup, heightMap);\r\n            },\r\n            onMouseUp: () => {\r\n                s.select(\".dot\").each((i, m) => m[i].remove());\r\n                heightMap.smoothEnabled(true);\r\n                pathDrawer.drawAllLayers();\r\n            }\r\n        });\r\n    };\r\n\r\n    const startPanning = (pDown:Point) => {\r\n        let location = viewPort.location();\r\n        mouseInput.startDragOperation({\r\n            onMouseMove: (pMove:Point) => {\r\n                viewPort.location({\r\n                    x:location.x - (pMove.x - pDown.x),\r\n                    y:location.y - (pMove.y - pDown.y)\r\n                });\r\n            },\r\n            onMouseUp: () => {}\r\n        });\r\n    };\r\n\r\n    const onMouseDown = (pDown:Point) => {\r\n        let tolerance = viewPort.zoomLevel()/2;\r\n        if (isCloseToPath(pDown, heightMap, tolerance))\r\n        {\r\n           startChangeHeights(pDown);\r\n        }\r\n        else\r\n        {\r\n            startPanning(pDown);\r\n        }\r\n    };\r\n\r\n    const onWheel = (e:WheelEvent) => {\r\n        viewPort.zoom(e.deltaY > 0 ? 1/1.1 : 1.1)\r\n    };\r\n\r\n    const downloadHeightMap = () => {\r\n        download(\"level.json\", \"application/json\", heightMap.serialize());\r\n    };\r\n\r\n    const downloadSvg = () => {\r\n        let currentLocation = viewPort.location();\r\n        viewPort.resetLayerPerspectives();\r\n        \r\n        download(\"level.svg\", \"image/svg+xml\", pathDrawer.serialize());\r\n        \r\n        viewPort.location(currentLocation);\r\n        viewPort.adjustLayerPerspectives(currentLocation);        \r\n    };\r\n\r\n    const show = () => {\r\n        keyboardInput.onKeyDown(49, downloadHeightMap); // key \"1\"\r\n        keyboardInput.onKeyDown(50, downloadSvg); // key \"2\"\r\n        pathDrawer.drawAllLayers();\r\n        mouseInput.onMouseDown(onMouseDown);\r\n        window.addEventListener(\"wheel\", onWheel);\r\n        editorVisible = true;\r\n        //editGroup.show();\r\n    };\r\n\r\n    const hide = () => {\r\n        mouseInput.off();\r\n        keyboardInput.off();\r\n        window.removeEventListener(\"wheel\", onWheel);\r\n        editorVisible = false;\r\n        //editGroup.hide();\r\n    };\r\n\r\n    const toggle = (visible?:boolean) => {\r\n        if (visible !== undefined) {\r\n            visible ? show() : hide();\r\n        }\r\n        else {\r\n            editorVisible ? hide() : show();\r\n        }\r\n        return editorVisible;\r\n    };\r\n\r\n    const getHeightMap = () => {\r\n        return heightMap.clone();\r\n    }\r\n\r\n    return {\r\n        toggle,\r\n        getHeightMap\r\n    };\r\n};\r\n","import { createKeyboardInput } from \"./keyboardinput\";\r\nimport { GameData } from \"./defs\";\r\n\r\nexport const GameLoop = (updateGameState:(dt:number, gameData:GameData)=>void ,updateGameView:(gameData:GameData)=>void) => {\r\n\r\n    const keyboard = createKeyboardInput();\r\n    const TIME_STEP = 10; \r\n    let gameData:GameData;\r\n    let animationFrameTimeout:any = null;\r\n    let previousTime:number = -1;\r\n\r\n    const onFrame = () => {\r\n        let now = Date.now();\r\n        while (previousTime + TIME_STEP < now) {\r\n            previousTime += TIME_STEP;\r\n            updateGameState(TIME_STEP, gameData);\r\n        }\r\n\r\n        updateGameView(gameData);\r\n        animationFrameTimeout = window.requestAnimationFrame(onFrame);\r\n    };\r\n\r\n    const start = (g:GameData) => {\r\n        gameData = g;\r\n        //keyboard.onKeyDown()\r\n        previousTime = Date.now();\r\n        onFrame();\r\n    };\r\n\r\n    const stop = () => {\r\n        keyboard.off();\r\n        if (!!animationFrameTimeout) {\r\n            window.cancelAnimationFrame(animationFrameTimeout);\r\n            animationFrameTimeout = null;\r\n        }\r\n    };\r\n\r\n    return {\r\n        start,\r\n        stop\r\n    };\r\n};","export const PLAYER_WIDTH = 1;\r\nexport const PLAYER_HEIGHT = 1.5;\r\nexport const GRAVITY = 10;\r\nexport const VIEWPORT_WIDTH = 40;\r\n\r\ninterface NumCallback {\r\n    (index:number): number\r\n}\r\n\r\nexport interface PlayerDef {\r\n    keyMap: KeyboardMap,\r\n    accentColor: string\r\n}\r\n\r\nexport const createGameData = (heightMap:HeightMap, playerDefs:Array<PlayerDef>):GameData => {\r\n    \r\n    let players:Array<Player> = playerDefs.map(def => (\r\n        {\r\n            id: 0,\r\n            pos: {x:0, y:0},\r\n            vel: {x:0, y:0},\r\n            angle: 0,\r\n            angleVel: 0,\r\n            touchesGround: false,\r\n            input: {\r\n                rotateLeft: false,\r\n                rotateRight: false,\r\n                jump: false\r\n            }\r\n        }));\r\n\r\n    return {\r\n        heightMap,\r\n        player: players[0],\r\n        camFocus: {x:0, y:0}\r\n    };\r\n};\r\n\r\nconst createLayerDefinition = (id:string, scale:number):LayerDefinition => ({\r\n    id,\r\n    scale\r\n});\r\n\r\nexport const  createLayers = () => {\r\n    let layers:Array<LayerDefinition> = [\r\n        createLayerDefinition(\"background-layer\", 0.3),\r\n        createLayerDefinition(\"player-layer\", 1),\r\n        createLayerDefinition(\"foreground-layer\", 1.2)\r\n    ];\r\n    return layers;\r\n};\r\n\r\nexport interface HeightMap {\r\n    setAll: (callback:NumCallback) => void,\r\n    get: (index:number) => number,\r\n    count: () => number\r\n    clone: () => HeightMap,\r\n    bounds: () => {x:number, y:number, width:number, height:number},\r\n    smoothEnabled: (enable?:boolean) => void | boolean,\r\n    serialize: () => string\r\n};\r\n\r\nexport interface Point {\r\n    x:number,\r\n    y:number\r\n}\r\n\r\nexport interface PointCallback {\r\n    (p:Point): void\r\n}\r\n\r\nexport interface Player {\r\n    id: number,\r\n    pos: Point,\r\n    vel: Point,\r\n    angle: number,\r\n    angleVel: number,\r\n    touchesGround: boolean;\r\n    input: {\r\n        rotateRight: boolean,\r\n        rotateLeft: boolean,\r\n        jump: boolean\r\n    }\r\n}\r\n\r\nexport interface KeyboardMap {\r\n    left:number,\r\n    right:number,\r\n    up:number\r\n};\r\n\r\nexport interface GameData {\r\n    heightMap: HeightMap,\r\n    player: Player,\r\n    camFocus: Point\r\n}\r\n\r\nexport interface LayerDefinition {\r\n    id: string,\r\n    scale: number\r\n}","import SVG from \"svgjs\";\r\nimport { Point, LayerDefinition, HeightMap, VIEWPORT_WIDTH } from \"./defs\";\r\n\r\nexport type ViewPort = ReturnType<typeof createViewPort>;\r\n\r\nexport const createViewPort = (s:SVG.Doc, layers:Array<LayerDefinition>) => {\r\n    \r\n    let zoomLevel = 1;\r\n\r\n    s.viewbox({\r\n        x: -VIEWPORT_WIDTH / 2,\r\n        y: -VIEWPORT_WIDTH / 2,\r\n        width: VIEWPORT_WIDTH,\r\n        height: VIEWPORT_WIDTH\r\n    });\r\n\r\n    const zoom = (factor:number) => {\r\n        let v = s.viewbox();\r\n        zoomLevel *= factor;\r\n        let newWidth = zoomLevel * VIEWPORT_WIDTH;\r\n\r\n        s.viewbox({\r\n            x:v.x + (v.width - newWidth)/2,\r\n            y:v.y + (v.width - newWidth)/2,\r\n            width: newWidth,\r\n            height: newWidth\r\n        });\r\n    };\r\n\r\n    const adjustLayerPerspectives = (p:Point) => {\r\n        layers.forEach(layer => {\r\n            let layerSvg = s.select(\"#\" + layer.id).get(0);\r\n            layerSvg.scale(layer.scale, layer.scale, 0, 0);\r\n            layerSvg.translate(p.x*(1-layer.scale), p.y*(1-layer.scale));\r\n        });\r\n    };\r\n\r\n    const resetLayerPerspectives = () => {\r\n        layers.forEach(layer => {\r\n            let layerSvg = s.select(\"#\" + layer.id).get(0);\r\n            layerSvg.matrix(1, 0, 0, 1, 0, 0);\r\n        });\r\n    };\r\n\r\n    const location = (p?:Point) => {\r\n        let v = s.viewbox();\r\n        if (!!p) {\r\n            s.viewbox({\r\n                x: p.x - v.width/2,\r\n                y: p.y - v.height/2, \r\n                width: v.width, \r\n                height:v.height\r\n            });\r\n\r\n            adjustLayerPerspectives(p);\r\n        }\r\n        else\r\n        {\r\n            return {x:v.x + v.width/2, y:v.y + v.height/2};\r\n        }\r\n    }\r\n\r\n    const setGetZoomLevel = (level?:number) => {\r\n        if (level === undefined) {\r\n            return zoomLevel;\r\n        }\r\n        zoomLevel = level;\r\n        zoom(1);\r\n    };\r\n\r\n    const width = () => {\r\n        return s.viewbox().width;\r\n    };\r\n\r\n    return {\r\n        width,\r\n        zoom,\r\n        zoomLevel: setGetZoomLevel,\r\n        location,\r\n        adjustLayerPerspectives,\r\n        resetLayerPerspectives\r\n    };\r\n};","import SVG from \"svgjs\";\r\nimport { LayerDefinition, HeightMap, VIEWPORT_WIDTH } from \"./defs\";\r\n\r\nexport type PathDrawer = ReturnType<typeof createPathDrawer>;\r\n\r\nexport const createPathDrawer = (s:SVG.Doc, heights:HeightMap, layers:Array<LayerDefinition>) => {\r\n\r\n    layers.sort((a, b) => a.scale - b.scale);\r\n\r\n    const drawAllLayers = () => {\r\n        drawLayerWithScale((_) => true);\r\n    };\r\n\r\n    const drawLayerWithScale = (predicate:(scale:number) => boolean) => {\r\n        layers.forEach(def => {\r\n            if (predicate(def.scale)) {\r\n                let group = getEditGroup(s, def.id, def.scale);\r\n                drawHeightPath(group, heights, def.scale);\r\n            }\r\n        });\r\n    };\r\n\r\n    const serialize = () => {\r\n        // @ts-ignore\r\n        return s.svg();\r\n    };\r\n\r\n    return {\r\n        drawAllLayers,\r\n        drawLayerWithScale,\r\n        serialize\r\n    };\r\n};\r\n\r\nconst getEditGroup = (s:SVG.Doc, id:string, scale:number):SVG.G => {\r\n    let editGroup = s.select(\"#\" + id).get(0) as SVG.G;\r\n    if (editGroup == null) {\r\n        editGroup = s.group().id(id).opacity(scale === 1 ? 1 : 0.3);\r\n    }\r\n    return editGroup;\r\n};\r\n\r\nconst drawHeightPath = (editGroup:SVG.G, heights:HeightMap, scale:number) => {\r\n    let path = editGroup.select(\".heightPaths\").get(0);\r\n    if (path) {\r\n        path.remove();\r\n    }\r\n\r\n    let multiplier = Math.min(scale, 1) * (heights.smoothEnabled() ? 5 : 1);\r\n    let maxDepth = -10000;\r\n    let points = heights.count() * multiplier;\r\n    \r\n    let parts = heights.count() / VIEWPORT_WIDTH;\r\n    let partList = [];\r\n\r\n    for (let partIx = 0; partIx < parts; partIx++) {\r\n\r\n        let startIx = Math.floor(points * partIx / parts);\r\n        let endIx = Math.min(Math.floor(points * (partIx + 1) / parts), points);\r\n\r\n        let part = new Array(endIx - startIx);\r\n        // \"<=\" constraint for overlapping parts\r\n        for (let ix = startIx; ix <= endIx; ix++) {            \r\n            let x = ix / multiplier;\r\n            let h = heights.get(x);\r\n            maxDepth = Math.max(maxDepth, h);\r\n            part[ix - startIx] = [x, h];\r\n        }\r\n        partList.push(part);\r\n    }\r\n\r\n    let polylines = editGroup.group().addClass(\"heightPaths\");\r\n\r\n    partList.forEach(part => {\r\n        // Close the path for each part\r\n        const slightoverlap = 1;\r\n        part.push([part[part.length-1][0] + slightoverlap, maxDepth+1]);\r\n        part.push([part[0][0], maxDepth+1]);\r\n        part.push([part[0][0], part[0][1]]);\r\n\r\n        polylines.group().polyline(part)// .stroke({width: 0.1, color:\"#aa6666\"})\r\n        .fill(\"#ffaaaa\");    \r\n    });    \r\n};","import { GameData, Point, GRAVITY, PLAYER_HEIGHT } from \"./defs\";\r\n\r\nconst vecToCenter = (player:GameData[\"player\"]) => {\r\n    return scale(p(-Math.sin(player.angle), -Math.cos(player.angle)), PLAYER_HEIGHT/2);\r\n};\r\n\r\nconst getAngularAcceleration = (gameData:GameData) => {\r\n    let player = gameData.player;\r\n    let input = player.input;\r\n    if (player.touchesGround) {\r\n        return 0;\r\n    }\r\n    if (input.rotateRight) {\r\n        return -1;\r\n    }\r\n    if (input.rotateLeft) {\r\n        return 1;\r\n    }\r\n    return -Math.sign(player.angleVel);\r\n};\r\n\r\nexport const stepState = (dt:number, gameData:GameData) => {\r\n    let player = gameData.player;\r\n    let heightMap = gameData.heightMap;\r\n    \r\n    let angleAcc = getAngularAcceleration(gameData);\r\n    player.angleVel += 20*angleAcc * dt/1000;\r\n    player.angleVel = Math.max(-10, Math.min(10, player.angleVel));\r\n\r\n    let angleDiff = player.angleVel * dt/1000;\r\n    let centerBeforeAngleChange = vecToCenter(player);\r\n    player.angle += angleDiff;\r\n    let centerAfterAngleChange = vecToCenter(player);\r\n\r\n    player.pos = add(player.pos, sub(centerBeforeAngleChange, centerAfterAngleChange));\r\n    \r\n    let pos = player.pos;\r\n    let vel = player.vel;\r\n    \r\n    vel.y += GRAVITY * dt/1000;\r\n    \r\n    pos.x += vel.x * dt/1000;\r\n    pos.y += vel.y * dt/1000;\r\n    \r\n    let delta = 1;\r\n    let slope = (heightMap.get(pos.x + delta/2) - heightMap.get(pos.x - delta/2))/delta;\r\n    let groundNormal = p(slope, -delta);\r\n        \r\n    const throughGround = pos.y - heightMap.get(pos.x);\r\n    if (throughGround > -0.1 && player.input.jump) {\r\n        player.vel = add(vel, scale(norm(groundNormal), 1));\r\n    } \r\n    else if (throughGround > 0) {\r\n        pos.y -= throughGround;\r\n        \r\n        let groundTangentUnit = norm(p(delta, slope));\r\n        let movingTowardsGround = dot(vel, groundNormal) < 0;\r\n        \r\n        if (movingTowardsGround) {\r\n            // Tangentize velocity\r\n            let newVel = scale(groundTangentUnit, dot(vel, groundTangentUnit));\r\n            vel.x = newVel.x;\r\n            vel.y = newVel.y;\r\n\r\n            // Tangentize angle\r\n            player.angle = -Math.atan(slope/delta);\r\n            player.angleVel = 0;\r\n        }\r\n    }\r\n\r\n    let playerCenter = add(pos, vecToCenter(player));\r\n    let lookAheadOffset = 10 * Math.atan(vel.x / 10);\r\n    let playerCenterLookAhead = add(playerCenter, p(lookAheadOffset, 0));\r\n\r\n    gameData.camFocus = add(scale(playerCenterLookAhead, 1/30),\r\n                            scale(gameData.camFocus, 29/30));\r\n    gameData.player.touchesGround = throughGround > -0.1;\r\n};\r\n\r\nconst magnitude = (vec:Point) => {\r\n    return Math.sqrt(vec.x*vec.x + vec.y*vec.y);\r\n};\r\n\r\nconst add = (vec1:Point, vec2:Point) => p(vec1.x + vec2.x, vec1.y + vec2.y);\r\n\r\nconst sub = (vec1:Point, vec2:Point) => p(vec1.x - vec2.x, vec1.y - vec2.y);\r\n\r\nconst dot = (vec1:Point, vec2:Point) => vec1.x * vec2.x + vec1.y * vec2.y;\r\n\r\nconst scale = (vec:Point, scalar:number) => p(vec.x * scalar, vec.y * scalar);\r\n\r\nconst norm = (vec:Point) => scale(vec, 1/magnitude(vec));\r\n\r\nconst p = (x:number, y:number) => ({x, y});","import { Point, LayerDefinition } from \"./defs\";\r\nimport SVG from \"svgjs\";\r\n\r\nexport interface Partition {\r\n    left: number,\r\n    right: number\r\n};\r\n\r\nexport const getPartitionLeftRight = (canvasWidth:number) => (canvasLeft:number, canvasRight:number, scale:number) => {\r\n\r\n    canvasLeft -= canvasWidth / 2;\r\n    canvasRight -= canvasWidth / 2;\r\n\r\n    let partitionLeft = Math.floor(canvasLeft / canvasWidth / scale) - Math.ceil(1 / scale);\r\n    let partitionRight = Math.floor(canvasRight / canvasWidth / scale) + Math.ceil(1 / scale);\r\n\r\n    return {\r\n        left: partitionLeft,\r\n        right: partitionRight\r\n    };\r\n};\r\n\r\nexport const setupPartitions = (canvasWidth:number, viewPortWidth:number, layers:Array<LayerDefinition>, s:SVG.Doc) => {\r\n    \r\n    let partitionTransitions:{[key:string]:Array<()=>void>} = {};\r\n    //let svgLevelWidth = heightMap.count();\r\n    let partitionSvgWidth = viewPortWidth;\r\n\r\n    const partitionKey = (from:number, to:number) => from + \"->\" + to;\r\n\r\n    const addPartitionTransition = (from:number, to:number, showHideAction:() => void) => {\r\n        let key = partitionKey(from, to);\r\n        let transition = partitionTransitions[key];\r\n        if (transition === undefined) {\r\n            transition = [];\r\n            partitionTransitions[key] = transition;\r\n        }\r\n        transition.push(showHideAction);\r\n    }\r\n\r\n    const svgPointToPartitionNum = (p:Point) => {\r\n        return Math.floor(p.x / partitionSvgWidth);\r\n    };\r\n\r\n    const applyTransitionUsingPartitions = (pFrom:number, pTo:number) => {\r\n        if (pFrom !== pTo) {\r\n            let transition = partitionTransitions[partitionKey(pFrom, pTo)];\r\n            if (!!transition) {\r\n                transition.forEach(action => action());\r\n            }\r\n        }\r\n    };\r\n\r\n    const applyTransition = (svgFromPoint:Point, svgToPoint:Point) => {\r\n        let partitionFrom = svgPointToPartitionNum(svgFromPoint); \r\n        let partitionTo = svgPointToPartitionNum(svgToPoint);\r\n        applyTransitionUsingPartitions(partitionFrom, partitionTo);\r\n    };\r\n\r\n    const showAction = (g:SVG.G) => () => g.show(); \r\n    const hideAction = (g:SVG.G) => () => g.hide(); \r\n  \r\n    const register = (g:SVG.G, canvasLeft:number, canvasRight:number, scale:number) => {\r\n        let { left, right } = getPartitionLeftRight(canvasWidth)(canvasLeft, canvasRight, scale)\r\n\r\n        addPartitionTransition(right, right + 1, hideAction(g));\r\n        addPartitionTransition(right + 1, right, showAction(g));\r\n        addPartitionTransition(left, left - 1, hideAction(g));\r\n        addPartitionTransition(left - 1, left, showAction(g));\r\n    };\r\n\r\n    // prepare culling\r\n    layers.forEach(layer => {\r\n        let layerSvg = s.select(\"#\" + layer.id).get(0) as SVG.G;\r\n        let all = layerSvg.select(\"g\");\r\n        for (let i = 0; i < all.length(); i++) {\r\n            let g = all.get(i) as SVG.G;\r\n            if (g.select(\"g\").length() === 0) {\r\n                // g has no child groups\r\n                let rect = g.node.getBoundingClientRect();\r\n                register(g, rect.left, rect.right, layer.scale);\r\n                g.hide();\r\n            }\r\n        }\r\n    });\r\n\r\n    // make initial transitions to make items visible from start\r\n    let t = -100;\r\n    while (t < 0) {\r\n        applyTransitionUsingPartitions(t, t+1);\r\n        t++;\r\n    }\r\n\r\n    return applyTransition;\r\n}","import { getPartitionLeftRight, Partition } from \"./partitioning\";\r\n\r\nconst testPartitions = () => {\r\n\r\n    const verify = (message:string, partition:Partition, left:number, right:number) => {\r\n        if (partition.left !== left || partition.right !== right) {\r\n            console.log(message + \": \" + partition.left + \",\" + partition.right + \"  expected \" + left + \",\" + right);\r\n        }\r\n    };\r\n\r\n    let get = getPartitionLeftRight(500);\r\n    verify(\r\n        \"screen width, offset 0.5\", \r\n        get(250, 749, 1), -1, 1);\r\n    verify(\r\n        \"screen width*1.5, offset 0\", \r\n        get(0, 749, 1), -2, 1);\r\n    verify(\r\n        \"screen width*2, offset 1.5\", \r\n        get(750, 1750, 1), 0, 4);\r\n    verify(\r\n        \"screen width, offset 1.5\", \r\n        get(250 + 10*500, 250 + 11*500, 1), 9, 12);\r\n    // scale 0.5\r\n    verify(\r\n        \"screen width*10, offset 0, scale 0.5\", \r\n        get(250, 500*10, 0.5), -2, 21);\r\n        \r\n}\r\n\r\nexport const test = () => {\r\n    testPartitions();\r\n};","import { ViewPort } from \"./viewport\";\r\nimport SVG from \"svgjs\";\r\nimport { LayerDefinition, Point, GameData, PLAYER_HEIGHT } from \"./defs\";\r\nimport { setupPartitions } from \"./partitioning\";\r\nimport { loadSvg } from \"./util\";\r\n\r\nexport const createView = (viewPort:ViewPort, s:SVG.Doc, layers:Array<LayerDefinition>) => {\r\n    \r\n    let playerSvgGroup:SVG.G;\r\n    let previousCamFocus:Point = {x:0, y:0};\r\n    let applyTransition:(from:Point, to:Point)=>void;\r\n\r\n    const update = (gameData:GameData) => {\r\n        let playerPos = gameData.player.pos;\r\n        viewPort.location(gameData.camFocus);\r\n\r\n        playerSvgGroup.rotate(180 * -gameData.player.angle / Math.PI);\r\n        playerSvgGroup.translate(playerPos.x, playerPos.y);\r\n        playerSvgGroup.style(\"color\", gameData.player.touchesGround ? \"red\" : \"salmon\");\r\n        \r\n        applyTransition(previousCamFocus, gameData.camFocus);\r\n        previousCamFocus = gameData.camFocus;\r\n    };\r\n\r\n    const reset = () => {\r\n        layers.forEach(layer => {\r\n            let elem = s.select(\"#\" + layer.id).get(0) as SVG.G;\r\n            if (!!elem) {\r\n                //elem.translate(0, 0);\r\n                elem.matrix(1, 0, 0, 1, 0, 0);\r\n            }\r\n        });\r\n\r\n        viewPort.zoomLevel(1);\r\n        viewPort.location({x:0, y:0});\r\n    };\r\n\r\n    const setup = async () => {\r\n        reset();\r\n\r\n        // Performance: This is about not rendering svg elements that are not visible\r\n        let canvasWidth = s.node.getBoundingClientRect().width;\r\n        applyTransition = setupPartitions(canvasWidth, viewPort.width(), layers, s);\r\n\r\n        playerSvgGroup = (s.select(\"#player-layer\").get(0) as SVG.G).group();\r\n\r\n        loadPlayerSvg(playerSvgGroup);    \r\n    };\r\n\r\n    const teardown = () => {\r\n        playerSvgGroup.remove();\r\n    };\r\n    \r\n    return {\r\n        update,\r\n        setup,\r\n        teardown\r\n    };\r\n};\r\n\r\nlet playerCached:SVGSVGElement; \r\nexport const loadPlayerSvg = async (g:SVG.G) => {\r\n    if (!playerCached) {\r\n        let elem = (await loadSvg(\"player.svg\")).asElement();\r\n        playerCached = elem;\r\n    }\r\n    let elemText = playerCached.getElementsByTagName('g')[0].outerHTML;\r\n    g.svg(elemText);\r\n    let bbox = g.bbox();\r\n    g.scale(PLAYER_HEIGHT/bbox.height, PLAYER_HEIGHT/bbox.height, 0, 0);\r\n};","import { createKeyboardInput } from \"./keyboardinput\";\r\nimport { PLAYER_HEIGHT, PlayerDef } from \"./defs\";\r\nimport SVG from \"svgjs\";\r\nimport { loadPlayerSvg } from \"./view\";\r\n\r\nexport const createPlayerDefinitions = ():Array<PlayerDef> => {\r\n    let players = [\r\n        {\r\n            keyMap: {right: 90, left: 81, up: 83},\r\n            accentColor: \"red\"\r\n        },\r\n        {\r\n            keyMap: {right: 78, left: 86, up: 71},\r\n            accentColor: \"green\"\r\n        },\r\n        {\r\n            keyMap: {right: 39, left: 37, up: 38},\r\n            accentColor: \"blue\"\r\n        },\r\n        {\r\n            keyMap: {right: 104, left: 98, up: 100},\r\n            accentColor: \"yellow\"\r\n        }\r\n    ];\r\n\r\n    return players;\r\n};\r\n\r\nconst makeDiv = (className:string) => {\r\n    let div = document.createElement(\"div\");\r\n    div.className = className;\r\n    let container = document.getElementsByClassName(\"aspectRatioChild\")[0];\r\n    container.append(div);\r\n    return div;\r\n};\r\n\r\nexport const welcomeScreen = async () => {\r\n    let welcomeDiv = makeDiv(\"welcome\");\r\n    let keyBoard = createKeyboardInput();\r\n\r\n    await new Promise(resolve => keyBoard.onKeyDown(32, resolve));\r\n\r\n    keyBoard.off();\r\n    welcomeDiv.remove();\r\n};\r\n\r\nexport const selectPlayers = async (s:SVG.Doc) => {\r\n    let playerDefs = createPlayerDefinitions();\r\n    let participatingPlayers = new Set<PlayerDef>();\r\n    let keyBoard = createKeyboardInput();\r\n    \r\n    s.viewbox(-5, -5, 10, 10);\r\n    let toCleanup:Array<SVG.G> = [];\r\n\r\n    const participate = (p:PlayerDef, g:SVG.G) => () => {\r\n        participatingPlayers.add(p);\r\n        g.opacity(1);\r\n    };\r\n\r\n    playerDefs.forEach((p, i) => {\r\n\r\n        let g = s.group()\r\n            .translate(-3 + i*6/3, PLAYER_HEIGHT/2)\r\n            .opacity(0.3)\r\n            .style(\"color\", p.accentColor);\r\n        loadPlayerSvg(g);\r\n        toCleanup.push(g);\r\n\r\n        let action = participate(p, g);\r\n        keyBoard.onKeyDown(p.keyMap.left, action);\r\n        keyBoard.onKeyDown(p.keyMap.right, action);\r\n        keyBoard.onKeyDown(p.keyMap.up, action);\r\n    })\r\n\r\n    await new Promise(resolve => keyBoard.onKeyDown(32, () => {\r\n        let atLeastTwoParticipants = participatingPlayers.size > 1;\r\n        if (atLeastTwoParticipants) {\r\n            resolve();\r\n        }\r\n    }));\r\n\r\n    keyBoard.off();\r\n    toCleanup.forEach(elem => elem.remove());\r\n    return Array.from(participatingPlayers.values());\r\n};","import { Editor } from \"./editor\";\r\nimport { createKeyboardInput, bindPlayerKeyboardInput } from \"./keyboardinput\";\r\nimport { GameLoop } from \"./gameloop\";\r\nimport { createGameData, createLayers } from \"./defs\";\r\nimport { createViewPort } from \"./viewport\";\r\nimport { createPathDrawer } from \"./editor-graphics\";\r\nimport { createHeightMap } from \"./heightmap\";\r\nimport { stepState } from \"./physics\";\r\nimport SVG from \"svgjs\";\r\nimport { test } from \"./test\";\r\nimport { createView } from \"./view\";\r\nimport { loadSvg, loadLevelJson } from \"./util\";\r\nimport { welcomeScreen, selectPlayers, createPlayerDefinitions } from \"./welcome\";\r\n\r\nasync function startGame(levelname:string) {\r\n\r\n    let svgId = \"mainsvg\";\r\n    let svgElement = document.getElementById(svgId);\r\n\r\n    await welcomeScreen();\r\n\r\n    let players = await selectPlayers(SVG(svgElement)); \r\n\r\n    let loadedSvg = (await loadSvg(\"levels/\" + levelname + \".svg\")).asElement();\r\n    svgElement.replaceWith(loadedSvg);\r\n    let s = SVG(document.getElementById(svgId));\r\n\r\n    let heightMap = await loadLevelJson(\"levels/\" + levelname + \".json\");\r\n    let gameData = createGameData(heightMap, players);\r\n    \r\n    let layers = createLayers();\r\n    let viewPort = createViewPort(s, layers);\r\n    \r\n    let view = createView(viewPort, s, layers);\r\n    let gameLoop = GameLoop(stepState, view.update);\r\n    \r\n    let keyboardMap = {right: 39, left: 37, up: 38};\r\n    let keyboardinput = createKeyboardInput();\r\n    bindPlayerKeyboardInput(gameData.player, keyboardMap, keyboardinput);\r\n    \r\n    gameData.player.pos.y = gameData.heightMap.get(gameData.player.pos.x);\r\n    view.setup();\r\n    gameLoop.start(gameData);\r\n};\r\n\r\nconst startEditMode = () => {\r\n    let svgId = \"mainsvg\";\r\n    let s = SVG(document.getElementById(svgId));\r\n\r\n    let layers = createLayers();\r\n\r\n    let heightMap = createHeightMap(1500);\r\n    let viewPort = createViewPort(s, layers);\r\n\r\n    let defaultPlayers = [createPlayerDefinitions()[2]]\r\n    \r\n    // Editor\r\n    let pathDrawer = createPathDrawer(s, heightMap, layers);\r\n    let editor = Editor(createGameData(heightMap, defaultPlayers), viewPort, pathDrawer);    \r\n\r\n    // Game\r\n    let view = createView(viewPort, s, layers);\r\n    let gameLoop = GameLoop(stepState, view.update);\r\n\r\n    let temporaryKeyboardInput = createKeyboardInput();\r\n    // Toggle Game/Editor\r\n    createKeyboardInput().onKeyDown(32, () => {   // Space\r\n        temporaryKeyboardInput.off();\r\n\r\n        let editorVisible = editor.toggle();\r\n        if (editorVisible) {\r\n            gameLoop.stop();\r\n            view.teardown();\r\n        }\r\n        else {\r\n            view.setup();\r\n\r\n            let gameData = createGameData(heightMap, defaultPlayers);\r\n            gameData.player.pos.y = gameData.heightMap.get(gameData.player.pos.x);\r\n            \r\n            let keyboardMap = {right: 39, left: 37, up: 38};\r\n            bindPlayerKeyboardInput(gameData.player, keyboardMap, temporaryKeyboardInput);\r\n            gameLoop.start(gameData);\r\n        }\r\n    });\r\n\r\n    editor.toggle(true);\r\n};\r\n\r\nfunction main() {\r\n\r\n    test();\r\n    let href = window.location.href;\r\n\r\n    if (href.search(/\\?edit/) > -1) {\r\n        // ENTER EDIT MODE\r\n        startEditMode();\r\n    }\r\n    else {\r\n        // ENTER GAMING MODE\r\n        let levelname = \"level\";\r\n        if (href.search(/\\?level=/) > -1) {\r\n            levelname = href.split(\"?level=\")[1];\r\n        }\r\n        startGame(levelname);\r\n    }\r\n};\r\n\r\nmain();"],"names":[],"mappings":"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"}